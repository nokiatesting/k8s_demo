apiVersion: v1
kind: Service
metadata:
  name: demo
spec:
  ports:
  - name: demo
    protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 32001
  selector:
    app: demo
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - name: mysql
    protocol: TCP
    port: 3306
    targetPort: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo
  labels:
    app: demo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: demo
  template:
    metadata:
      labels:
        app: demo
    spec:
      containers:
      - name: demo
        image: docker.io/nokiatesting/docker_demo
        ports:
        - containerPort: 5000
          name: demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: docker.io/nmysql
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        readinessProbe:
          exec:
            command: ['/bin/sh', '-c', 'MYSQL_PWD=root mysql -uroot -e "create database if not exists testdb" || exit 1']
          failureThreshold: 3
          periodSeconds: 10
      volumes:
      - name: mysql-data
        nfs:
          server: fixme
          path: /exports/data-mysql
---
